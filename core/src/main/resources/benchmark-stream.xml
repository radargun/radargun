<benchmark xmlns="urn:radargun:benchmark:3.0">

    <!-- Specifies where should the master open socket -->
    <master bindAddress="${master.address:127.0.0.1}" port="${master.port:2103}"/>

    <!-- List of cluster configurations where the benchmark should run -->
    <clusters>
        <cluster size="${cluster_size:2}"/>
    </clusters>

    <!-- List of configurations of the services -->
    <configurations>
        <config name="Infinispan 8.0 - distributed">
            <setup plugin="infinispan80">
                <embedded xmlns="urn:radargun:plugins:infinispan80:3.0" file="dist-sync.xml"/>
            </setup>
        </config>
    </configurations>

    <!-- Sequence of stages executed on the cluster -->
    <scenario>
        <!-- Start services on all nodes -->
        <service-start/>

        <!-- Fill the cache with 100 randomly generated words consuming 1% of the JVM heap -->
        <random-data
                value-size="${value_size:1024}"
                ram-percentage="${ram_percentage:0.01}"
                random-seed="13"
                string-data="true"
                limit-word-count="true"
                share-words="true"
                max-word-count="${max_word_count:100}"
        />

        <!-- Execute a Stream task. -->
        <stream
                cache-name="testCache"
                stream-operation-class="org.radargun.stages.stream.WordCount"
                print-result="${print_results:true}"
                num-executions="${num_executions:5}"
                parallel-stream="${parallel_stream:true}"
                slaves="0">
        </stream>

        <!-- Stop services on all nodes -->
        <service-stop/>
    </scenario>

    <!-- How the statistics are reported -->
    <reports>
        <!-- Produce CSV statistics report -->
        <reporter type="csv"/>
        <!-- Produce HTML statistics report -->
        <reporter type="html"/>
    </reports>

</benchmark>