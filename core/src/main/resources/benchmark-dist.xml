<!-- RadarGun 2.0 benchmark -->
<benchmark xmlns="urn:radargun:benchmark:2.0">

   <!-- Specifies where should the master open socket  -->
   <master bindAddress="${master.address:127.0.0.1}" port="${master.port:2103}"/>

   <!-- List of cluster configurations where the benchmark should run-->
   <clusters>
      <!-- Equivalent to <cluster size="2" /><cluster size="3" /> -->
      <scale from="2" to="3" inc="1">
         <!-- No groups defined within the cluster -->
         <cluster />
      </scale>
   </clusters>

   <!-- List of configurations of the services -->
   <configurations>
      <config name="Infinispan 5.2 - distributed">
         <!-- All slaves use the same configuration -->
         <setup plugin="infinispan52">
            <embedded xmlns="urn:radargun:plugins:infinispan52:2.0" file="dist-sync.xml"/>
         </setup>
      </config>
      <config name="Infinispan 6.0 - distributed">
         <setup plugin="infinispan60">
            <embedded xmlns="urn:radargun:plugins:infinispan60:2.0" file="dist-sync.xml"/>
         </setup>
      </config>
   </configurations>

   <!-- Sequence of stages executed on the cluster -->
   <scenario>
      <!-- Start services on all nodes -->
      <service-start />
      <!-- Begin monitoring of CPU, memory usage and GC -->
      <jvm-monitor-start />

      <!-- Preload the cache with data -->
      <load-data num-entries="5000"/>
      <!-- 5 threads will execute total of 100,000 random requests against the default cache ('testCache')-->
      <!-- As the test is called 'warmup', performance statistics won't be reported -->
      <basic-operations-test test-name="warmup" num-requests="100000" num-threads-per-node="5">
         <key-selector>
            <concurrent-keys total-entries="5000" />
         </key-selector>
      </basic-operations-test>

      <!-- Remove all data from the default cache -->
      <clear-cache />
      <!-- Again, preload the cache with data -->
      <load-data num-entries="10000"/>

      <!-- 10, 20 and 30 threads will execute random request for 1 minute against the default cache ('testCache') -->
      <repeat from="10" to="30" inc="10">
         <basic-operations-test test-name="stress-test" amend-test="true"
                                duration="1m" num-threads-per-node="${repeat.counter}">
            <key-selector>
               <concurrent-keys total-entries="10000"/>
            </key-selector>
         </basic-operations-test>
      </repeat>

      <!-- Stop JVM monitoring -->
      <jvm-monitor-stop />
   </scenario>

   <!-- How the statistics are reported -->
   <reports>
      <!-- Produce CSV statistics report -->
      <reporter type="csv" />
      <!-- Produce HTML statistics report -->
      <reporter type="html" />
      <!-- Store Java-serialized version of the results that can be used to re-run the report -->
      <reporter type="serialized" />
   </reports>

</benchmark>
