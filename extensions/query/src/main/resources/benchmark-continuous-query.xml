<benchmark xmlns="urn:radargun:benchmark:3.0">

    <master bindAddress="${master.address:127.0.0.1}" port="${master.port:2103}"/>

    <clusters>
        <scale from="2" to="2">
            <cluster/>
        </scale>
    </clusters>

    <configurations>
        <config name="ContinuousQuery80">
            <setup plugin="infinispan80">
                <default xmlns="urn:radargun:plugins:infinispan80:3.0" file="query.xml"/>
            </setup>
        </config>
        <config name="ContinuousQuery90">
            <setup plugin="infinispan90">
                <default xmlns="urn:radargun:plugins:infinispan90:3.0" file="query.xml"/>
            </setup>
        </config>
    </configurations>

    <rg:scenario xmlns:rg="urn:radargun:benchmark:3.0"
                 xmlns="urn:radargun:stages:core:3.0"
                 xmlns:cache="urn:radargun:stages:cache:3.0"
                 xmlns:q="urn:radargun:stages:query:3.0">
        <service-start/>

        <!-- Loading the data -->
        <cache:load num-entries="5000" entry-size="0" seed="12345">
            <cache:value-generator>
                <cache:sentence file="${org.radargun.query.dictionary:/test-data/animals.txt}"/>
            </cache:value-generator>
        </cache:load>

        <!-- Register continuous query -->
        <q:continuous-query test-name="cq-register" class="org.radargun.query.TextObject">
            <q:conditions>
                <q:any>
                    <q:like path="text" value="%S%"/>
                </q:any>
            </q:conditions>
        </q:continuous-query>

        <!-- Insert various items into the cache, some of them should match the query  -->
       
        <basic-operations-test xmlns="urn:radargun:stages:cache:3.0" test-name="stress-test"
          num-threads-per-node="2" duration="1m">
           <key-selector>
             <concurrent-keys total-entries="1000" />
           </key-selector>
           <key-generator>
              <timestamp />
         </key-generator>
         <value-generator>
            <sentence file="${org.radargun.query.dictionary:/test-data/animals.txt}" />
         </value-generator>
         <statistics>
            <common/>
         </statistics>
      </basic-operations-test>

        <!-- Remote continuous query, this is important as this stage updates the statistics -->
        <q:continuous-query test-name="cq-remove" remove="true" class="org.radargun.query.TextObject">
            <q:conditions>
                <q:any>
                    <q:like path="text" value="%S%"/>
                </q:any>
            </q:conditions>
        </q:continuous-query>

        <service-stop/>
    </rg:scenario>

    <reports>
        <reporter type="html"/>
        <reporter type="csv"/>
    </reports>

</benchmark>