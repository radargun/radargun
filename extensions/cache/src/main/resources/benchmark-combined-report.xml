<!-- RadarGun 3.0 benchmark -->
<benchmark xmlns="urn:radargun:benchmark:3.0">

   <master bindAddress="${master.address:127.0.0.1}" port="${master.port:2103}"/>

   <clusters>
      <cluster size="2"/>
      <cluster size="4"/>
   </clusters>

   <configurations>
      <config name="First configuration">
         <setup plugin="infinispan60">
            <embedded xmlns="urn:radargun:plugins:infinispan60:3.0"
                      file="dist-sync.xml"/>
         </setup>
      </config>
      <config name="Second configuration">
         <setup plugin="infinispan60">
            <embedded xmlns="urn:radargun:plugins:infinispan60:3.0"
                      file="dist-sync.xml"/>
         </setup>
      </config>
   </configurations>

   <rg:scenario xmlns:rg="urn:radargun:benchmark:3.0"
                xmlns="urn:radargun:stages:core:3.0"
                xmlns:cache="urn:radargun:stages:cache:3.0">
      <service-start />

      <!-- Preload the cache with data -->
      <cache:load num-entries="5000"/>

      <cache:basic-operations-test test-name="warmup" duration="${warmup.duration:10s}" num-threads-per-node="10">
         <cache:key-selector>
            <cache:colliding-keys num-entries="5000" />
         </cache:key-selector>
      </cache:basic-operations-test>

      <cache:basic-operations-test test-name="concurrent" duration="${test.long.duration:10s}" num-threads-per-node="10">
         <cache:key-selector>
            <cache:concurrent-keys total-entries="5000" />
         </cache:key-selector>
      </cache:basic-operations-test>

      <cache:basic-operations-test test-name="colliding" duration="${test.long.duration:10s}" num-threads-per-node="10">
         <cache:key-selector>
            <cache:colliding-keys num-entries="5000" />
         </cache:key-selector>
      </cache:basic-operations-test>

      <rg:repeat from="1" to="${repeat.times:3}">
         <cache:basic-operations-test test-name="iterating" amend-test="true"
                                iteration-property="num-threads-per-node"
                                duration="${test.short.duration:5s}" num-threads-per-node="#{2 ^ ${repeat.counter}}">
            <cache:key-selector>
               <cache:colliding-keys num-entries="5000"/>
            </cache:key-selector>
         </cache:basic-operations-test>
      </rg:repeat>
   </rg:scenario>

   <reports>
      <reporter type="html">
         <report>
            <html xmlns="urn:radargun:reporters:reporter-default:3.0"
                  target-dir="reports/html-default"/>
         </report>
         <report>
            <html xmlns="urn:radargun:reporters:reporter-default:3.0"
                  target-dir="reports/html-separate">
               <test-report separate-cluster-charts="true" />
            </html>
         </report>
         <report>
            <html xmlns="urn:radargun:reporters:reporter-default:3.0"
                  target-dir="reports/html-combined">
               <!-- Notice the square brackets, you might create multiple combinations using
                     [testA, testB], [testB, testC]
                 -->
               <test-report combined-tests="[concurrent, colliding]"/>
            </html>
         </report>
      </reporter>
   </reports>

</benchmark>
