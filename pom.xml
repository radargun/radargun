<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.radargun</groupId>
      <artifactId>radargun-parent</artifactId>
      <version>2.2.0-SNAPSHOT</version>
      <relativePath>parent/pom.xml</relativePath>
   </parent>

   <artifactId>radargun-aggregator</artifactId>
   <name>RadarGun - Aggregator</name>
   <description>The aggregator for RadarGun</description>
   <packaging>pom</packaging>

   <modules>
      <module>core</module>
      <module>parent</module>
   </modules>

   <scm>
      <connection>scm:git:git@github.com:radargun/radargun.git</connection>
      <url>scm:git:git@github.com:radargun/radargun.git</url>
      <developerConnection>scm:git:git@github.com:radargun/radargun.git</developerConnection>
     <tag>HEAD</tag>
  </scm>

   <properties>
      <distribution.name>RadarGun-${project.version}</distribution.name>
      <distribution.artifact>target/distribution/${distribution.name}</distribution.artifact>
      <plugins.chm/>
      <plugins.ehcache/>
      <plugins.hazelcast/>
      <plugins.jbosscache/>
      <plugins.jgroups/>
      <plugins.infinispan/>
      <plugins.jdk18/>
      <plugins.jdg/>
      <plugins.jdg70/>
      <plugins.coherence/>
      <plugins.process />
      <plugins.spark />
      <plugins.resteasy-http />
      <plugins.spymemcached />
      <reporter.default />
      <reporter.perfrepo />
      <extension.example/>
      <extension.hdrhistogram />
   </properties>

   <profiles>
      <!-- Extensions -->
      <profile>
         <id>extension-example</id>
         <activation>
            <property>
               <name>extension-example</name>
            </property>
         </activation>
         <modules>
            <module>extensions/extension-example</module>
         </modules>
         <properties>
            <extension.example>extension-example</extension.example>
         </properties>
      </profile>
      <profile>
         <id>hdrhistogram</id>
         <activation>
            <activeByDefault>true</activeByDefault>
            <property>
               <name>!no-hdrhistogram</name>
            </property>
         </activation>
         <modules>
            <module>extensions/hdrhistogram</module>
         </modules>
         <properties>
            <extension.hdrhistogram>hdrhistogram</extension.hdrhistogram>
         </properties>
      </profile>
      <!-- Plugin-specific -->
      <profile>
         <id>jpa</id>
         <activation>
            <property>
               <name>jpa</name>
            </property>
         </activation>
         <modules>
            <module>specific/jpa</module>
         </modules>
      </profile>
      <!-- Reporters -->
      <profile>
         <id>reporter-default</id>
         <activation>
            <property>
               <name>!no-reporter-default</name>
            </property>
         </activation>
         <modules>
            <module>reporters/reporter-default</module>
         </modules>
         <properties>
            <reporter.default>reporter-default</reporter.default>
         </properties>
      </profile>
      <profile>
         <id>reporter-perfrepo</id>
         <activation>
            <property>
               <name>!no-reporter-perfrepo</name>
            </property>
         </activation>
         <modules>
            <module>reporters/reporter-perfrepo</module>
         </modules>
         <properties>
            <reporter.perfrepo>reporter-perfrepo</reporter.perfrepo>
         </properties>
      </profile>
      <!-- Plugins -->
      <profile>
         <id>chm</id>
         <activation>
            <property>
               <name>!no-chm</name>
            </property>
         </activation>
         <modules>
            <module>plugins/chm</module>
         </modules>
         <properties>
            <plugins.chm>chm</plugins.chm>
         </properties>
      </profile>
      <profile>
         <id>ehcache</id>
         <activation>
            <property>
               <name>!no-ehcache</name>
            </property>
         </activation>
         <modules>
            <module>plugins/ehcache25</module>
            <module>plugins/ehcache26</module>
         </modules>
         <properties>
            <plugins.ehcache>ehcache25,ehcache26</plugins.ehcache>
         </properties>
      </profile>
      <profile>
         <id>hazelcast</id>
         <activation>
            <property>
               <name>!no-hazelcast</name>
            </property>
         </activation>
         <modules>
            <module>plugins/hazelcast2</module>
            <module>plugins/hazelcast3</module>
         </modules>
         <properties>
            <plugins.hazelcast>hazelcast2,hazelcast3</plugins.hazelcast>
         </properties>
      </profile>
      <profile>
         <id>jbosscache</id>
         <activation>
            <property>
               <name>!no-jbosscache</name>
            </property>
         </activation>
         <modules>
            <module>plugins/jbosscache2</module>
            <module>plugins/jbosscache3</module>
         </modules>
         <properties>
            <plugins.jbosscache>jbosscache2,jbosscache3</plugins.jbosscache>
         </properties>
      </profile>
      <profile>
         <id>jgroups</id>
         <activation>
            <property>
               <name>!no-jgroups</name>
            </property>
         </activation>
         <modules>
            <module>plugins/jgroups30</module>
            <module>plugins/jgroups32</module>
            <module>plugins/jgroups33</module>
            <module>plugins/jgroups34</module>
         </modules>
         <properties>
            <plugins.jgroups>jgroups30,jgroups32,jgroups33,jgroups34</plugins.jgroups>
         </properties>
      </profile>
      <profile>
         <id>jgroups35</id>
         <activation>
            <property>
               <name>jgroups35</name>
            </property>
         </activation>
         <modules>
            <module>plugins/jgroups35</module>
         </modules>
         <properties>
            <plugins.jgroups>jgroups30,jgroups32,jgroups33,jgroups34,jgroups35</plugins.jgroups>
         </properties>
      </profile>
      <profile>
         <id>infinispan</id>
         <activation>
            <property>
               <name>!no-infinispan</name>
            </property>
         </activation>
         <modules>
            <module>plugins/infinispan4</module>
            <module>plugins/infinispan50</module>
            <module>plugins/infinispan51</module>
            <module>plugins/infinispan52</module>
            <module>plugins/infinispan53</module>
            <module>plugins/infinispan60</module>
            <module>plugins/infinispan70</module>
            <module>plugins/infinispan71</module>
            <module>plugins/infinispan72</module>
         </modules>
         <properties>
            <plugins.infinispan>infinispan4,infinispan50,infinispan51,infinispan52,infinispan53,infinispan60,infinispan70,infinispan71,infinispan72</plugins.infinispan>
         </properties>
      </profile>
      <profile>
         <id>jdk18</id>
         <activation>
            <jdk>1.8</jdk>
            <property>
               <name>!no-jdk18</name>
            </property>
         </activation>
         <modules>
            <module>plugins/infinispan80</module>
            <module>plugins/infinispan81</module>
            <module>plugins/infinispan82</module>
            <module>plugins/spark</module>
         </modules>
         <properties>
            <plugins.jdk18>infinispan80,infinispan81,infinispan82,spark</plugins.jdk18>
         </properties>
      </profile>
      <profile>
         <id>coherence</id>
         <activation>
            <property>
               <name>coherence</name>
            </property>
         </activation>
         <modules>
            <module>plugins/coherence3</module>
            <module>plugins/coherence12</module>
         </modules>
         <properties>
            <plugins.coherence>coherence3,coherence12</plugins.coherence>
         </properties>
      </profile>
      <profile>
         <id>jdg</id>
         <activation>
            <property>
               <name>jdg</name>
            </property>
         </activation>
         <modules>
            <module>plugins/jdg60</module>
            <module>plugins/jdg61</module>
            <module>plugins/jdg62</module>
            <module>plugins/jdg63</module>
            <module>plugins/jdg64</module>
            <module>plugins/jdg65</module>
            <module>plugins/jdg66</module>
         </modules>
         <properties>
            <plugins.jdg>jdg60,jdg61,jdg62,jdg63,jdg64,jdg65,jdg66</plugins.jdg>
         </properties>
      </profile>

      <!-- Profile for JDG 7. Requires log4j2 to be defined as well. -->
      <profile>
         <id>jdg70</id>
         <activation>
            <property>
               <name>jdg70</name>
            </property>
         </activation>
         <modules>
            <module>plugins/jdg70</module>
         </modules>
         <properties>
            <plugins.jdg70>jdg70</plugins.jdg70>
         </properties>
      </profile>

      <profile>
         <id>process</id>
         <activation>
            <property>
               <name>!no-process</name>
            </property>
         </activation>
         <modules>
            <module>plugins/process</module>
         </modules>
         <properties>
            <plugins.process>process</plugins.process>
         </properties>
      </profile>
      <profile>
         <id>resteasy-http</id>
         <activation>
            <property>
               <name>!no-resteasy-http</name>
            </property>
         </activation>
         <modules>
            <module>plugins/resteasy-http</module>
         </modules>
         <properties>
            <resteasy-http>resteasy-http</resteasy-http>
         </properties>
      </profile>
      <profile>
         <id>spymemcached</id>
         <activation>
            <property>
               <name>!no-spymemcached</name>
            </property>
         </activation>
         <modules>
            <module>plugins/spymemcached</module>
         </modules>
         <properties>
            <plugins.spymemcached>spymemcached</plugins.spymemcached>
         </properties>
      </profile>
      <profile>
         <id>jcache</id>
         <!-- TODO trigger compilation only when a module which depends on JCache plugin is compiled -->
         <activation>
            <property>
               <name>!no-jcache</name>
            </property>
         </activation>
         <modules>
            <module>plugins/jcache</module>
         </modules>
      </profile>
      <profile>
         <id>http</id>
         <activation>
            <property>
               <name>!no-http</name>
            </property>
         </activation>
         <modules>
            <module>plugins/resteasy-http</module>
         </modules>
         <properties>
            <plugins.http>resteasy-http</plugins.http>
         </properties>
      </profile>
   </profiles>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
               <execution>
                  <id>prepare_distribution</id>
                  <phase>prepare-package</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <target>
                        <delete dir="target/distribution" />
                        <mkdir dir="target/distribution" />
                        <mkdir dir="${distribution.artifact}" />
                     </target>
                  </configuration>
               </execution>

               <execution>
                  <id>prepare_core</id>
                  <phase>prepare-package</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <target>
                        <echo message="Packaging the Core and common scripts" />
                        <copy todir="${distribution.artifact}">
                           <fileset dir="core/target/distribution/radargun-core-bin/radargun-core">
                              <include name="**/*" />
                           </fileset>
                        </copy>
                        <mkdir dir="${distribution.artifact}/specific" />
                        <copy todir="${distribution.artifact}/specific">
                           <fileset dir="specific/jpa/target" erroronmissingdir="false">
                              <include name="radargun-jpa-*.jar" />
                           </fileset>
                        </copy>
                        <copy todir="${distribution.artifact}/bin">
                           <fileset dir="bin">
                              <include name="**/*" />
                           </fileset>
                        </copy>
                        <chmod perm="ugo+rwx" type="file">
                           <fileset dir="${distribution.artifact}/bin">
                              <include name="**/*.sh" />
                              <include name="**/*.py" />
                           </fileset>
                        </chmod>
                        <mkdir dir="${distribution.artifact}/schema" />
                        <mkdir dir="${distribution.artifact}/reporters" />
                        <mkdir dir="${distribution.artifact}/plugins" />
                     </target>
                  </configuration>
               </execution>

               <execution>
                  <id>prepare_extensions</id>
                  <phase>prepare-package</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <target>
                        <echo message="Packaging extensions: " />

                        <fileset id="core_jars" dir="core/target/distribution/radargun-core-bin/radargun-core/lib">
                           <include name="*.jar" />
                        </fileset>
                        <pathconvert pathsep="," property="core_jar_list" refid="core_jars">
                           <mapper type="flatten" />
                        </pathconvert>

                        <ac:for list="${extension.example},${extension.hdrhistogram}" param="extension" xmlns:ac="antlib:net.sf.antcontrib">
                           <sequential>
                              <echo message="Packaging extension @{extension}..." />
                              <copy todir="${distribution.artifact}/lib">
                                 <fileset dir="extensions/@{extension}/target/distribution/@{extension}-bin/@{extension}/lib" excludes="${core_jar_list}"/>
                              </copy>
                           </sequential>
                        </ac:for>
                     </target>
                  </configuration>
               </execution>

               <execution>
                  <id>prepare_plugins</id>
                  <phase>prepare-package</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <target>
                        <macrodef name="chmod-if-exists">
                           <attribute name="dir"/>
                           <attribute name="perm"/>
                           <sequential>
                              <ac:if xmlns:ac="antlib:net.sf.antcontrib">
                                 <available file="@{dir}" type="dir" />
                                 <ac:then>
                                    <chmod dir="@{dir}" perm="@{perm}" includes="**/*"/>
                                 </ac:then>
                              </ac:if>
                           </sequential>
                        </macrodef>

                        <macrodef name="copy-plugin">
                           <attribute name="plugin"/>
                           <sequential>
                              <copy todir="${distribution.artifact}/plugins/@{plugin}">
                                 <fileset dir="plugins/@{plugin}/target/distribution/plugin-@{plugin}-bin/plugin-@{plugin}">
                                    <include name="**/*" />
                                 </fileset>
                              </copy>
                              <copy todir="${distribution.artifact}/schema">
                                 <fileset dir="plugins/@{plugin}">
                                    <include name="*.xsd"/>
                                 </fileset>
                              </copy>
                              <chmod-if-exists dir="${distribution.artifact}/plugins/@{plugin}/bin" perm="ugo+x" />
                           </sequential>
                        </macrodef>

                        <macrodef name="copy-plugin-links">
                           <attribute name="plugin"/>
                           <sequential>
                              <copy todir="${distribution.artifact}/plugins/@{plugin}">
                                 <fileset dir="plugins/@{plugin}/target/distribution/plugin-@{plugin}-bin/plugin-@{plugin}">
                                    <include name="**/*" />
                                    <exclude name="**/*.jar" />
                                 </fileset>
                              </copy>
                              <copy todir="${distribution.artifact}/schema">
                                 <fileset dir="plugins/@{plugin}">
                                    <include name="*.xsd"/>
                                 </fileset>
                              </copy>
                              <chmod-if-exists dir="${distribution.artifact}/plugins/@{plugin}/bin" perm="ugo+x" />
                              <copy todir="${distribution.artifact}/plugin-dependencies">
                                 <fileset dir="plugins/@{plugin}/target/distribution/plugin-@{plugin}-bin/plugin-@{plugin}/lib">
                                    <include name="*.jar" />
                                 </fileset>
                              </copy>
                              <exec executable="bash" failonerror="true">
                                 <arg value="-c"/>
                                 <arg value="for FILE in `ls plugins/@{plugin}/target/distribution/plugin-@{plugin}-bin/plugin-@{plugin}/lib/`; do ln -s ../../../plugin-dependencies/$FILE ${distribution.artifact}/plugins/@{plugin}/lib/; done;"/>
                              </exec>
                           </sequential>
                        </macrodef>

                        <path id="core_and_extensions">
                           <fileset dir="${distribution.artifact}/lib" includes="*.jar" />
                        </path>

                        <echo message="Packaging plugins: " />
                        <ac:for list="${plugins.chm},${plugins.ehcache},${plugins.hazelcast},${plugins.http},${plugins.jbosscache},${plugins.jgroups},${plugins.infinispan},${plugins.jdk18},${plugins.jdg},${plugins.jdg70},${plugins.coherence},${plugins.process},${plugins.resteasy-http},${plugins.spymemcached}" param="plugin" xmlns:ac="antlib:net.sf.antcontrib">
                           <sequential>
                              <echo message="Packaging plugin @{plugin}..." />
                              <ac:if>
                                 <isset property="zip-links"/>
                              <ac:then>
                                 <copy-plugin-links plugin="@{plugin}"/>
                              </ac:then>
                              <ac:else>
                                 <copy-plugin plugin="@{plugin}"/>
                              </ac:else>
                              </ac:if>
                              <java classname="org.radargun.config.PluginSchemaGenerator" failonerror="true" classpathref="core_and_extensions">
                                 <sysproperty key="log4j.configuration" value="file:///${basedir}/core/target/distribution/radargun-core-bin/radargun-core/conf/log4j.xml" />
                                 <arg value="${distribution.artifact}/schema" />
                                 <arg value="@{plugin}" />
                              </java>
                           </sequential>
                        </ac:for>
                     </target>
                  </configuration>
               </execution>

               <execution>
                  <id>prepare_reporters</id>
                  <phase>prepare-package</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <target>
                        <echo message="Packaging reporters: " />

                        <fileset id="core_jars" dir="core/target/distribution/radargun-core-bin/radargun-core/lib">
                           <include name="*.jar" />
                        </fileset>
                        <pathconvert pathsep="," property="core_jar_list" refid="core_jars">
                           <mapper type="flatten" />
                        </pathconvert>
                        <path id="core_and_extensions">
                           <fileset dir="${distribution.artifact}/lib" includes="*.jar" />
                        </path>

                        <ac:for list="${reporter.default},${reporter.perfrepo}" param="reporter" xmlns:ac="antlib:net.sf.antcontrib">
                           <sequential>
                              <echo message="Packaging reporter @{reporter}..." />
                              <copy todir="${distribution.artifact}/reporters/@{reporter}">
                                 <fileset dir="reporters/@{reporter}/target/distribution/@{reporter}-bin/@{reporter}/lib" excludes="${core_jar_list}"/>
                              </copy>
                              <java classname="org.radargun.config.ReporterSchemaGenerator" failonerror="true" classpathref="core_and_extensions">
                                 <sysproperty key="log4j.configuration" value="file:///${basedir}/core/target/distribution/radargun-core-bin/radargun-core/conf/log4j.xml" />
                                 <arg value="${distribution.artifact}/schema" />
                                 <arg value="${distribution.artifact}/reporters/@{reporter}" />
                                 <arg value="@{reporter}" />
                              </java>
                           </sequential>
                        </ac:for>
                     </target>
                  </configuration>
               </execution>

               <execution>
                  <id>generate_xsd</id>
                  <phase>prepare-package</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <target>
                        <echo message="Generating XSD schema" />
                        <path id="core_and_extensions">
                           <fileset dir="${distribution.artifact}/lib" includes="*.jar" />
                        </path>
                        <java classname="org.radargun.config.ConfigSchemaGenerator" failonerror="true" classpathref="core_and_extensions">
                           <sysproperty key="log4j.configuration" value="file:///${basedir}/core/target/distribution/radargun-core-bin/radargun-core/conf/log4j.xml" />
                           <arg value="${distribution.artifact}/schema" />
                        </java>
                        <copy todir="${distribution.artifact}/schema">
                           <fileset dir="." includes="*.xsd"/>
                        </copy>
                     </target>
                  </configuration>
               </execution>

               <execution>
                  <id>build_distro</id>
                  <phase>package</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <tasks>
                        <echo message="Building distribution archive" />
                        <ac:if xmlns:ac="antlib:net.sf.antcontrib">
                           <isset property="zip-links"/>
                           <ac:then>
                              <!-- This cannot be executed on all platforms and the produced zip may be non-portable either -->
                              <echo message="Building zip file ${distribution.name}.zip"/>
                              <exec executable="zip" failonerror="true" dir="target/distribution" logError="true" output="/dev/null">
                                 <arg value="-ry"/>
                                 <arg value="${distribution.name}.zip"/>
                                 <arg value="${distribution.name}/"/>
                              </exec>
                           </ac:then>
                           <ac:else>
                              <zip destfile="target/distribution/${distribution.name}.zip" basedir="target/distribution" excludes="**/bin/**,radargun-aggregator-bin/**">
                                 <zipfileset dir="${distribution.artifact}/bin" filemode="755" prefix="${distribution.name}/bin" />
                                 <zipfileset dir="${distribution.artifact}/plugins/process/bin" filemode="755" prefix="${distribution.name}/plugins/process/bin"/>
                              </zip>
                           </ac:else>
                        </ac:if>
                     </tasks>
                  </configuration>
               </execution>
            </executions>
            <dependencies>
               <dependency>
                  <groupId>ant-contrib</groupId>
                  <artifactId>ant-contrib</artifactId>
                  <version>1.0b3</version>
                  <exclusions>
                     <exclusion>
                        <groupId>ant</groupId>
                        <artifactId>ant</artifactId>
                     </exclusion>
                  </exclusions>
               </dependency>
            </dependencies>
         </plugin>
      </plugins>
   </build>
</project>
